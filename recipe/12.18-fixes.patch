diff --git a/packages/PyTrilinos/doc/Doxygen/Doxyfile_Tpetra.in b/packages/PyTrilinos/doc/Doxygen/Doxyfile_Tpetra.in
index d43e0d4e74..9b8b1e28d7 100644
--- a/packages/PyTrilinos/doc/Doxygen/Doxyfile_Tpetra.in
+++ b/packages/PyTrilinos/doc/Doxygen/Doxyfile_Tpetra.in
@@ -824,7 +824,7 @@ RECURSIVE              = NO
 # Note that relative paths are relative to the directory from which doxygen is
 # run.
 
-EXCLUDE                =
+EXCLUDE                = 
 
 # The EXCLUDE_SYMLINKS tag can be used to select whether or not files or
 # directories that are symbolic links (a Unix file system feature) are excluded
@@ -840,7 +840,7 @@ EXCLUDE_SYMLINKS       = NO
 # Note that the wildcards are matched against the file with absolute path, so to
 # exclude all test directories for example use the pattern */test/*
 
-EXCLUDE_PATTERNS       =
+EXCLUDE_PATTERNS       = 
 
 # The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names
 # (namespaces, classes, functions, etc.) that should be excluded from the
@@ -851,7 +851,8 @@ EXCLUDE_PATTERNS       =
 # Note that the wildcards are matched against the file with absolute path, so to
 # exclude all test directories use the pattern */test/*
 
-EXCLUDE_SYMBOLS        =
+EXCLUDE_SYMBOLS        = packAndPrepare unpackAndCombine blockCrsMatrixWriter \
+                         copyAndPermute
 
 # The EXAMPLE_PATH tag can be used to specify one or more files or directories
 # that contain example code fragments that are included (see the \include
diff --git a/packages/PyTrilinos/doc/Doxygen/docstrings.py.in b/packages/PyTrilinos/doc/Doxygen/docstrings.py.in
index c0a537af9b..8aba4e4882 100755
--- a/packages/PyTrilinos/doc/Doxygen/docstrings.py.in
+++ b/packages/PyTrilinos/doc/Doxygen/docstrings.py.in
@@ -47,6 +47,7 @@ def create_docstrings(package,
     # Run doxy2swig.py on the appropriate index.xml file
 
     # Get the doxy2swig script, source filename, and output filename
+    python     = sys.executable
     source_dir = os.path.split(__file__)[0]
     doxy2swig  = os.path.join(source_dir,"doxy2swig.py")
     doxy2swig  = os.path.abspath(doxy2swig)
@@ -63,7 +64,7 @@ def create_docstrings(package,
     sys.stdout.flush()
 
     # Run and wait for completion
-    result = subprocess.call([doxy2swig, source, output],
+    result = subprocess.call([python, doxy2swig, source, output],
                              stdout=out_file,
                              stderr=err_file)
 
diff --git a/packages/PyTrilinos/doc/Doxygen/doxy2swig.py.in b/packages/PyTrilinos/doc/Doxygen/doxy2swig.py.in
index 09896e8ce2..ba7088ecc2 100755
--- a/packages/PyTrilinos/doc/Doxygen/doxy2swig.py.in
+++ b/packages/PyTrilinos/doc/Doxygen/doxy2swig.py.in
@@ -60,7 +60,7 @@ def my_str(source):
 class Doxy2SWIG:
     """
     Converts Doxygen generated XML files into a file containing
-    docstrings that can be used by SWIG-1.3.x that have support for
+    docstrings that can be used by SWIG >= 1.3 that have support for
     feature("docstring").  Once the data is parsed it is stored in
     self.pieces.
     """
@@ -102,6 +102,7 @@ class Doxy2SWIG:
 
         self.space_re = re.compile(r'\s+')
         self.lead_spc = re.compile(r'^(%feature\S+\s+\S+\s*?)"\s+(\S)')
+        self.variadic = re.compile(r'<.*\.\.\.\s*>', re.DOTALL)
         self.multi = 0
         self.ignores = ['inheritancegraph', 'param', 'listofallmembers',
                         'innerclass', 'name', 'declname', 'incdepgraph',
@@ -432,6 +433,30 @@ class Doxy2SWIG:
                 _tmp = textwrap.fill(i.strip(), break_long_words=False)
                 _tmp = self.lead_spc.sub(r'\1"\2', _tmp)
                 ret.extend([_tmp, '\n\n'])
+
+        # PytViper: look for pieces that have variadic template arguments
+        # and if found, comment each line of the swig directive
+        i = 0
+        while i < len(ret):
+            piece = ret[i]
+            if piece.startswith('%feature("docstring")'):
+                m = self.variadic.findall(piece)
+                if m:
+                    start = i
+                    while not ret[i].endswith('";'):
+                        i += 1;
+                    end = i+1
+                    for j in range(start, end):
+                        piece = ret[j]
+                        parts = piece.split('\n')
+                        for k in range(len(parts)):
+                            part = parts[k]
+                            if not part.startswith('//'):
+                                parts[k] = '// ' + part
+                        ret[j] = "\n".join(parts)
+            i += 1
+        # PytViper: done
+
         return ret
 
 
diff --git a/packages/PyTrilinos/src/PyTrilinos/Isorropia/CMakeLists.txt b/packages/PyTrilinos/src/PyTrilinos/Isorropia/CMakeLists.txt
index 437e70566d..a06fb4c0b4 100644
--- a/packages/PyTrilinos/src/PyTrilinos/Isorropia/CMakeLists.txt
+++ b/packages/PyTrilinos/src/PyTrilinos/Isorropia/CMakeLists.txt
@@ -65,7 +65,7 @@ FOREACH(MODULE ${LOCAL_MODULES})
   INSTALL(FILES
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.py
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.pyc
-    DESTINATION ${PyTrilinos_INSTALL_DIR})
+    DESTINATION ${PyTrilinos_INSTALL_DIR}/Isorropia)
   LIST(APPEND ADDITIONAL_CLEAN_FILES ${MODULE}.pyc)
   
 ENDFOREACH(MODULE ${LOCAL_MODULES})
diff --git a/packages/PyTrilinos/src/PyTrilinos/LOCA/CMakeLists.txt b/packages/PyTrilinos/src/PyTrilinos/LOCA/CMakeLists.txt
index a45d6c5b19..5d119713bb 100644
--- a/packages/PyTrilinos/src/PyTrilinos/LOCA/CMakeLists.txt
+++ b/packages/PyTrilinos/src/PyTrilinos/LOCA/CMakeLists.txt
@@ -65,7 +65,7 @@ FOREACH(MODULE ${LOCAL_MODULES})
   INSTALL(FILES
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.py
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.pyc
-    DESTINATION ${PyTrilinos_INSTALL_DIR})
+    DESTINATION ${PyTrilinos_INSTALL_DIR}/LOCA)
   LIST(APPEND ADDITIONAL_CLEAN_FILES ${MODULE}.pyc)
   
 ENDFOREACH(MODULE ${LOCAL_MODULES})
diff --git a/packages/PyTrilinos/src/PyTrilinos/LOCA/Epetra/CMakeLists.txt b/packages/PyTrilinos/src/PyTrilinos/LOCA/Epetra/CMakeLists.txt
index fd06d3f116..221043450b 100644
--- a/packages/PyTrilinos/src/PyTrilinos/LOCA/Epetra/CMakeLists.txt
+++ b/packages/PyTrilinos/src/PyTrilinos/LOCA/Epetra/CMakeLists.txt
@@ -65,7 +65,7 @@ FOREACH(MODULE ${LOCAL_MODULES})
   INSTALL(FILES
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.py
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.pyc
-    DESTINATION ${PyTrilinos_INSTALL_DIR})
+    DESTINATION ${PyTrilinos_INSTALL_DIR}/LOCA/Epetra)
   LIST(APPEND ADDITIONAL_CLEAN_FILES ${MODULE}.pyc)
   
 ENDFOREACH(MODULE ${LOCAL_MODULES})
diff --git a/packages/PyTrilinos/src/PyTrilinos/LOCA/Hopf/CMakeLists.txt b/packages/PyTrilinos/src/PyTrilinos/LOCA/Hopf/CMakeLists.txt
index e6ed2b088d..13d2e61841 100644
--- a/packages/PyTrilinos/src/PyTrilinos/LOCA/Hopf/CMakeLists.txt
+++ b/packages/PyTrilinos/src/PyTrilinos/LOCA/Hopf/CMakeLists.txt
@@ -65,7 +65,7 @@ FOREACH(MODULE ${LOCAL_MODULES})
   INSTALL(FILES
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.py
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.pyc
-    DESTINATION ${PyTrilinos_INSTALL_DIR})
+    DESTINATION ${PyTrilinos_INSTALL_DIR}/LOCA/Hopf)
   LIST(APPEND ADDITIONAL_CLEAN_FILES ${MODULE}.pyc)
   
 ENDFOREACH(MODULE ${LOCAL_MODULES})
diff --git a/packages/PyTrilinos/src/PyTrilinos/LOCA/Pitchfork/CMakeLists.txt b/packages/PyTrilinos/src/PyTrilinos/LOCA/Pitchfork/CMakeLists.txt
index 7222334235..ae010fc45c 100644
--- a/packages/PyTrilinos/src/PyTrilinos/LOCA/Pitchfork/CMakeLists.txt
+++ b/packages/PyTrilinos/src/PyTrilinos/LOCA/Pitchfork/CMakeLists.txt
@@ -65,7 +65,7 @@ FOREACH(MODULE ${LOCAL_MODULES})
   INSTALL(FILES
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.py
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.pyc
-    DESTINATION ${PyTrilinos_INSTALL_DIR})
+    DESTINATION ${PyTrilinos_INSTALL_DIR}/LOCA/Pitchfork)
   LIST(APPEND ADDITIONAL_CLEAN_FILES ${MODULE}.pyc)
   
 ENDFOREACH(MODULE ${LOCAL_MODULES})
diff --git a/packages/PyTrilinos/src/PyTrilinos/LOCA/TurningPoint/CMakeLists.txt b/packages/PyTrilinos/src/PyTrilinos/LOCA/TurningPoint/CMakeLists.txt
index 447e38d018..e202135707 100644
--- a/packages/PyTrilinos/src/PyTrilinos/LOCA/TurningPoint/CMakeLists.txt
+++ b/packages/PyTrilinos/src/PyTrilinos/LOCA/TurningPoint/CMakeLists.txt
@@ -65,7 +65,7 @@ FOREACH(MODULE ${LOCAL_MODULES})
   INSTALL(FILES
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.py
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.pyc
-    DESTINATION ${PyTrilinos_INSTALL_DIR})
+    DESTINATION ${PyTrilinos_INSTALL_DIR}/LOCA/TurningPoint)
   LIST(APPEND ADDITIONAL_CLEAN_FILES ${MODULE}.pyc)
   
 ENDFOREACH(MODULE ${LOCAL_MODULES})
diff --git a/packages/PyTrilinos/src/PyTrilinos/NOX/CMakeLists.txt b/packages/PyTrilinos/src/PyTrilinos/NOX/CMakeLists.txt
index 3f7491a8dc..d7004ed6ae 100644
--- a/packages/PyTrilinos/src/PyTrilinos/NOX/CMakeLists.txt
+++ b/packages/PyTrilinos/src/PyTrilinos/NOX/CMakeLists.txt
@@ -65,7 +65,7 @@ FOREACH(MODULE ${LOCAL_MODULES})
   INSTALL(FILES
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.py
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.pyc
-    DESTINATION ${PyTrilinos_INSTALL_DIR})
+    DESTINATION ${PyTrilinos_INSTALL_DIR}/NOX)
   LIST(APPEND ADDITIONAL_CLEAN_FILES ${MODULE}.pyc)
   
 ENDFOREACH(MODULE ${LOCAL_MODULES})
diff --git a/packages/PyTrilinos/src/PyTrilinos/NOX/Epetra/CMakeLists.txt b/packages/PyTrilinos/src/PyTrilinos/NOX/Epetra/CMakeLists.txt
index d620f44de9..93c5211c91 100644
--- a/packages/PyTrilinos/src/PyTrilinos/NOX/Epetra/CMakeLists.txt
+++ b/packages/PyTrilinos/src/PyTrilinos/NOX/Epetra/CMakeLists.txt
@@ -65,7 +65,7 @@ FOREACH(MODULE ${LOCAL_MODULES})
   INSTALL(FILES
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.py
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.pyc
-    DESTINATION ${PyTrilinos_INSTALL_DIR})
+    DESTINATION ${PyTrilinos_INSTALL_DIR}/NOX/Epetra)
   LIST(APPEND ADDITIONAL_CLEAN_FILES ${MODULE}.pyc)
   
 ENDFOREACH(MODULE ${LOCAL_MODULES})
diff --git a/packages/PyTrilinos/src/PyTrilinos/NOX/PETSc/CMakeLists.txt b/packages/PyTrilinos/src/PyTrilinos/NOX/PETSc/CMakeLists.txt
index 91302ec6fd..f9632d20df 100644
--- a/packages/PyTrilinos/src/PyTrilinos/NOX/PETSc/CMakeLists.txt
+++ b/packages/PyTrilinos/src/PyTrilinos/NOX/PETSc/CMakeLists.txt
@@ -65,7 +65,7 @@ FOREACH(MODULE ${LOCAL_MODULES})
   INSTALL(FILES
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.py
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.pyc
-    DESTINATION ${PyTrilinos_INSTALL_DIR})
+    DESTINATION ${PyTrilinos_INSTALL_DIR}/NOX/PETSc)
   LIST(APPEND ADDITIONAL_CLEAN_FILES ${MODULE}.pyc)
   
 ENDFOREACH(MODULE ${LOCAL_MODULES})
diff --git a/packages/PyTrilinos/src/PyTrilinos/Teuchos/CMakeLists.txt b/packages/PyTrilinos/src/PyTrilinos/Teuchos/CMakeLists.txt
index e5e30a7c39..05a0308af4 100644
--- a/packages/PyTrilinos/src/PyTrilinos/Teuchos/CMakeLists.txt
+++ b/packages/PyTrilinos/src/PyTrilinos/Teuchos/CMakeLists.txt
@@ -65,7 +65,7 @@ FOREACH(MODULE ${LOCAL_MODULES})
   INSTALL(FILES
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.py
     ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.pyc
-    DESTINATION ${PyTrilinos_INSTALL_DIR})
+    DESTINATION ${PyTrilinos_INSTALL_DIR}/Teuchos)
   LIST(APPEND ADDITIONAL_CLEAN_FILES ${MODULE}.pyc)
   
 ENDFOREACH(MODULE ${LOCAL_MODULES})
diff --git a/packages/PyTrilinos/src/PyTrilinos_Teuchos_Headers.hpp b/packages/PyTrilinos/src/PyTrilinos_Teuchos_Headers.hpp
index f696215922..4a2f70b4d5 100644
--- a/packages/PyTrilinos/src/PyTrilinos_Teuchos_Headers.hpp
+++ b/packages/PyTrilinos/src/PyTrilinos_Teuchos_Headers.hpp
@@ -78,6 +78,7 @@
 #include "Teuchos_ParameterList.hpp"
 #include "Teuchos_ParameterListAcceptor.hpp"
 #include "Teuchos_ParameterListExceptions.hpp"
+#include "Teuchos_ParameterListModifier.hpp"
 #include "Teuchos_RCP.hpp"
 #include "Teuchos_RCPDecl.hpp"
 #include "Teuchos_ReductionOp.hpp"
diff --git a/packages/PyTrilinos/src/Teuchos_ParameterList.i b/packages/PyTrilinos/src/Teuchos_ParameterList.i
index 486b7186b2..de47cfc75b 100644
--- a/packages/PyTrilinos/src/Teuchos_ParameterList.i
+++ b/packages/PyTrilinos/src/Teuchos_ParameterList.i
@@ -933,6 +933,12 @@ Teuchos::ParameterList::values
   }
 }    // %extend ParameterList
 
+%{
+  using Teuchos::Array;
+  using Teuchos::null;
+  using Teuchos::ParameterListModifier;
+%}
+
 %ignore Teuchos::ParameterList::set;
 %ignore Teuchos::ParameterList::setEntry;
 %ignore Teuchos::ParameterList::get;
@@ -948,7 +954,7 @@ Teuchos::ParameterList::values
 %ignore Teuchos::ParameterList::name(ConstIterator) const;
 %include "Teuchos_ParameterList.hpp"
 // SWIG thinks that PrintOptions is an un-nested Teuchos class, so we
-// need to trick the C++ compiler into understanding this so called
+// need to trick the C++ compiler into understanding this so-called
 // un-nested Teuchos type.
 %{
 namespace Teuchos
@@ -961,3 +967,10 @@ typedef ParameterList::PrintOptions PrintOptions;
 // Teuchos::ParameterListAcceptor support //
 ////////////////////////////////////////////
 %include "Teuchos_ParameterListAcceptor.hpp"
+
+////////////////////////////////////////////
+// Teuchos::ParameterListModifier support //
+////////////////////////////////////////////
+%teuchos_rcp(Teuchos::ParameterListModifier)
+%include "Teuchos_ParameterListModifier.hpp"
+
diff --git a/packages/PyTrilinos/src/gen_teuchos_rcp.py.in b/packages/PyTrilinos/src/gen_teuchos_rcp.py.in
index b43cc9f71e..5337e54890 100755
--- a/packages/PyTrilinos/src/gen_teuchos_rcp.py.in
+++ b/packages/PyTrilinos/src/gen_teuchos_rcp.py.in
@@ -442,14 +442,10 @@ def get_import_directives(teuchos_rcps):
         if swig_directive not in result:
             result.append(swig_directive)
 
-    # if (WITH_TPETRA):
-    #     # Find the Tpetra::Map import
-    #     index = result.index('%import "Tpetra_Map_decl.hpp"')
-    #     result.insert(index  , "%ignore Tpetra::Map::Map;")
-    #     result.insert(index+1, "%ignore Tpetra::Map::getGlobalNumElements;")
-    #     result.insert(index+2, "%ignore Tpetra::Map::getRemoteIndexList;")
-    #     result.insert(index+3, "%ignore Tpetra::Map::getMyGlobalIndices;")
-    #     result.insert(index+5, "%template(Map_default) Tpetra::Map<PYTRILINOS_LOCAL_ORD,PYTRILINOS_GLOBAL_ORD>;")
+    if (WITH_TPETRA):
+        # Find the Tpetra::Map import
+        index = result.index('%import "Tpetra_Map_decl.hpp"')
+        result.insert(index, '%import "TpetraCore_config.h"')
 
     if (WITH_ANASAZI):
         # Find the first Anasazi import and insert AnasaziTypes.hpp before it
diff --git a/packages/PyTrilinos/test/CMakeLists.txt b/packages/PyTrilinos/test/CMakeLists.txt
index 618ab2283c..9e984c5055 100644
--- a/packages/PyTrilinos/test/CMakeLists.txt
+++ b/packages/PyTrilinos/test/CMakeLists.txt
@@ -46,7 +46,8 @@ ENABLE_TESTING()
 INCLUDE(PyTrilinosMakeTest)
 
 ADD_CUSTOM_COMMAND(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/testutil.py
-  COMMAND ${PyTrilinos_BINARY_DIR}/util/copyWithCMakeSubstitutions.py
+  COMMAND ${PYTHON_EXECUTABLE}
+          ${PyTrilinos_BINARY_DIR}/util/copyWithCMakeSubstitutions.py
           ${CMAKE_CURRENT_SOURCE_DIR}/testutil.py.in
 	  ${CMAKE_CURRENT_BINARY_DIR}/testutil.py
   DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/testutil.py.in)
